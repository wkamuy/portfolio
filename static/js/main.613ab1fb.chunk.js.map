{"version":3,"sources":["actions.ts","reducer.ts","components/molecules/Copyright.tsx","components/molecules/MenuBar.tsx","containers/molecules/MenuBar.tsx","components/templates/CommonTemplate.tsx","components/molecules/CodeBlock.tsx","components/pages/HomePage.tsx","Data/aboutMe.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MenuBarActionType","initialState","isOpen","Copyright","authorName","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","createStyles","appBar","backgroundColor","boxShadow","position","iconButton","marginRight","spacing","menuButtonBox","marginLeft","menuButton","textTransform","menuIcon","title","fontFamily","join","snsIconBox","list","width","link","textDecoration","MenuBar","open","close","classes","AppBar","className","Toolbar","Box","display","xs","sm","md","lg","xl","IconButton","aria-label","onClick","Button","to","Link","href","underline","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","EnhancedMenuBar","useSelector","state","dispatch","useDispatch","event","type","createMuiTheme","palette","background","default","CommonTemplate","children","ThemeProvider","CssBaseline","CodeBlock","value","language","style","materialDark","HomePage","Grid","container","justify","item","Fade","in","timeout","Paper","source","renderers","code","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","err","console","error","store","createStore","action","Type","undefined","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.613ab1fb.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MenuBarActionType = {\n  OPEN: 'OPEN',\n  CLOSE: 'CLOSE',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\nexport type MenuBarAction = {\n  type: ValueOf<typeof MenuBarActionType>;\n  event?: React.KeyboardEvent | React.MouseEvent;\n};\n\nexport const open = (\n  event: React.KeyboardEvent | React.MouseEvent,\n): MenuBarAction => ({\n  type: MenuBarActionType.OPEN,\n  event,\n});\n\nexport const close = (\n  event: React.KeyboardEvent | React.MouseEvent,\n): MenuBarAction => ({\n  type: MenuBarActionType.CLOSE,\n  event,\n});\n","import { Reducer } from 'redux';\nimport { MenuBarAction, MenuBarActionType as Type } from 'actions';\n\nexport type MenuBarState = { isOpen: boolean };\nexport const initialState: MenuBarState = { isOpen: false };\n\nexport const MenuBarReducer: Reducer<MenuBarState, MenuBarAction> = (\n  state: MenuBarState = initialState,\n  action: MenuBarAction,\n): MenuBarState => {\n  switch (action.type) {\n    case Type.OPEN:\n      if (action.event !== undefined) {\n        if (\n          action.event.type === 'keydown' &&\n          ((action.event as React.KeyboardEvent).key === 'Tab' ||\n            (action.event as React.KeyboardEvent).key === 'Shift')\n        ) {\n          return {\n            ...state,\n          };\n        }\n      }\n\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case Type.CLOSE:\n      if (action.event !== undefined) {\n        if (\n          action.event.type === 'keydown' &&\n          ((action.event as React.KeyboardEvent).key === 'Tab' ||\n            (action.event as React.KeyboardEvent).key === 'Shift')\n        ) {\n          return {\n            ...state,\n          };\n        }\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default: {\n      const _: never = action.type;\n\n      return state;\n    }\n  }\n};\n","import { FC } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype CopyrightProps = {\n  authorName: string;\n};\n\nconst Copyright: FC<CopyrightProps> = ({ authorName }) => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Â© '}\n    {new Date().getFullYear()} {authorName}.\n  </Typography>\n);\n\nexport default Copyright;\n","import { FC } from 'react';\nimport { Link as LinkRouter } from 'react-router-dom/';\nimport Link from '@material-ui/core/Link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      backgroundColor: 'transparent',\n      boxShadow: 'none',\n      position: 'static',\n    },\n    iconButton: {\n      marginRight: theme.spacing(2),\n    },\n    menuButtonBox: {\n      marginLeft: '20px',\n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n      textTransform: 'none',\n      color: 'inherit',\n    },\n    menuIcon: {\n      color: 'white',\n    },\n    title: {\n      fontFamily: ['Montserrat', 'sans-serif'].join(','),\n    },\n    snsIconBox: {\n      marginLeft: 'auto',\n    },\n    list: {\n      width: 170,\n    },\n    link: {\n      textDecoration: 'none',\n      color: 'white',\n    },\n  }),\n);\n\ntype MenuBarProps = {\n  title?: string;\n  isOpen?: boolean;\n  open?: (event: React.KeyboardEvent | React.MouseEvent) => void;\n  close?: (event: React.KeyboardEvent | React.MouseEvent) => void;\n};\n\nconst MenuBar: FC<MenuBarProps> = ({\n  title,\n  isOpen = false,\n  open = () => undefined,\n  close = () => undefined,\n}) => {\n  const classes = useStyles();\n\n  // List of Side Bar\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={close}\n      onKeyDown={close}\n    >\n      <List>\n        <LinkRouter className={classes.link} to=\"/portfolio\">\n          <ListItem button>\n            <ListItemIcon>\n              <PermIdentityIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n        </LinkRouter>\n        <Divider variant=\"middle\" />\n        <Link\n          className={classes.link}\n          href=\"https://wkamuy.hatenablog.com/\"\n          underline=\"none\"\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <MenuBookIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Blog\" />\n          </ListItem>\n        </Link>\n        <Divider variant=\"middle\" />\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Box\n            display={{\n              xs: 'block',\n              sm: 'block',\n              md: 'none',\n              lg: 'none',\n              xl: 'none',\n            }}\n          >\n            <IconButton\n              className={classes.iconButton}\n              aria-label=\"menu\"\n              onClick={open}\n            >\n              <MenuIcon className={classes.menuIcon} />\n            </IconButton>\n          </Box>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}.PAGES\n          </Typography>\n          <Box\n            display={{\n              xs: 'none',\n              sm: 'none',\n              md: 'block',\n              lg: 'block',\n              xl: 'block',\n            }}\n            className={classes.menuButtonBox}\n          >\n            <Button className={classes.menuButton}>\n              <LinkRouter className={classes.link} to=\"/portfolio\">\n                About\n              </LinkRouter>\n            </Button>\n            <Button className={classes.menuButton}>\n              <Link\n                className={classes.link}\n                href=\"https://wkamuy.hatenablog.com/\"\n                underline=\"none\"\n              >\n                Blog\n              </Link>\n            </Button>\n          </Box>\n          <Box className={classes.snsIconBox}>\n            <Link\n              className={classes.link}\n              href=\"https://twitter.com/wkamuy1\"\n              underline=\"none\"\n            >\n              <IconButton>\n                <TwitterIcon />\n              </IconButton>\n            </Link>\n            <Link\n              className={classes.link}\n              href=\"https://github.com/wkamuy\"\n              underline=\"none\"\n            >\n              <IconButton>\n                <GitHubIcon />\n              </IconButton>\n            </Link>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor=\"left\" open={isOpen} onClose={close}>\n        {list()}\n      </Drawer>\n    </>\n  );\n};\n\nexport default MenuBar;\n","import { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { open, close } from 'actions';\nimport { MenuBarState } from 'reducer';\nimport MenuBar from 'components/molecules/MenuBar';\n\ntype EnhancedMenuBarProps = {\n  title: string;\n};\n\nconst EnhancedMenuBar: FC<EnhancedMenuBarProps> = ({ title }) => {\n  const isOpen = useSelector<MenuBarState, boolean>((state) => state.isOpen);\n  const dispatch = useDispatch();\n\n  return (\n    <MenuBar\n      title={title}\n      isOpen={isOpen}\n      open={(event: React.KeyboardEvent | React.MouseEvent) =>\n        dispatch(open(event))\n      }\n      close={(event: React.KeyboardEvent | React.MouseEvent) =>\n        dispatch(close(event))\n      }\n    />\n  );\n};\n\nexport default EnhancedMenuBar;\n","import { FC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Copyright from '../molecules/Copyright';\nimport MenuBar from '../../containers/molecules/MenuBar';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#212121',\n    },\n    type: 'dark',\n  },\n});\n\ntype CommonTemplateProps = {\n  children?: React.ReactNode;\n};\n\nconst CommonTemplate: FC<CommonTemplateProps> = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <MenuBar title=\"WKAMUY\" />\n    {children}\n    <Box>\n      <Copyright authorName=\"wkamuy\" />\n    </Box>\n  </ThemeProvider>\n);\n\nexport default CommonTemplate;\n","// ~/components/CodeBlock.tsx\nimport { FC } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport materialDark from 'react-syntax-highlighter/dist/cjs/styles/prism/material-dark';\n\ninterface P {\n  value: string;\n  language?: string;\n}\n\nconst CodeBlock: FC<P> = ({ value, language }) => (\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  <SyntaxHighlighter language={language} style={materialDark}>\n    {value}\n  </SyntaxHighlighter>\n);\n\nexport default CodeBlock;\n","import { FC } from 'react';\nimport ReactMarkDown from 'react-markdown';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport CommonTemplate from '../templates/CommonTemplate';\nimport CodeBlock from '../molecules/CodeBlock';\nimport aboutMe from '../../Data/aboutMe';\n\nconst HomePage: FC = () => (\n  <CommonTemplate>\n    <Grid container justify=\"center\">\n      <Grid item xs={11}>\n        <Typography variant=\"h6\">About Me</Typography>\n        <Fade in timeout={1500}>\n          <Paper>\n            <ReactMarkDown source={aboutMe} renderers={{ code: CodeBlock }} />\n          </Paper>\n        </Fade>\n      </Grid>\n    </Grid>\n  </CommonTemplate>\n);\nexport default HomePage;\n","const aboutMe = `\n\\`\\`\\`yaml\n---\nwellcomeMessages: |\n  Wellcome to my pages. I'm wkamuy, a programmer and a system architect. Record blogs and contributions to OSS.\n  Please feel free to contact me if you have any.\n\nname: wkamuy\nage: 28\ncountry: Japan\nlikes:\n  - YAML\n  - Markdown\n  - Martial arts\n  - Hot spring\n  - Sweets\n  - Drinking\nengineerSkills:\n  - os:\n    - RHEL\n    - Windows\n  - cloud:\n    - Azure\n    - AWS\n  - CICD:\n    - Azure DevOps\n    - Jenkins\n  - programingLanguages:\n    - ShellScript\n    - Ruby\n    - Python\n    - Typescript\n    - HTML/CSS/Javascript\n  - others:\n    - IaC\nsns:\n  - name: Twitter\n    id: @wkamuy1\n    url: https://twitter.com/wkamuy1\n  - name: GitHub\n    id: @wkamuy\n    url: https://github.com/wkamuy\n\\`\\`\\`\n`;\nexport default aboutMe;\n","import { FC } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from 'components/pages/HomePage';\n\nconst App: FC = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/portfolio\">\n        <HomePage />\n      </Route>\n      <Redirect to=\"/portfolio\" />;\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals')\n      .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { MenuBarReducer, initialState } from 'reducer';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(MenuBarReducer, initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}